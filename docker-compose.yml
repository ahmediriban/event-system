services:
  postgres:
    image: postgres:15-alpine
    container_name: event-system-db
    environment:
      POSTGRES_DB: event_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: event-system-api
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/event_system?schema=public
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/apps/api/node_modules
      - /app/packages/node_modules
    working_dir: /app
    command: pnpm --filter @event-system/api dev

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: event-system-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/apps/web/node_modules
      - /app/packages/node_modules
    working_dir: /app
    command: pnpm --filter @event-system/web dev

volumes:
  postgres_data: 